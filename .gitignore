# start from https://github.com/github/gitignore/blob/main/Rust.gitignore
# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb


# mac file system file
.DS_Store

# Jet brains (C Lion) IDE file.
# Thinking about a convention to make it s separate personal private repo
# of the form:
# 	proj-dot_idea
# where proj is the name of the curent project.
# Then maybe make a git hook to cascade a add --all and commit into that repo.
# same for push.
# really cool would be to make a rust git comand extension to support that.
.idea/
#.idea/vcs.xml

# test data is managed in a separate repo. 
# See https://github.com/psons/test_data_eg/eng_test_data
eng_test_data/
